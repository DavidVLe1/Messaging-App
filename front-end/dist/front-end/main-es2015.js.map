{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/messaging/messaging.component.ts","./src/app/messaging/messaging.component.html","./src/app/app-routing.module.ts","./src/app/_services/messaging.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<nav class=\"navbar navbar-light bg-dark\">\n    <a [routerLink]=\"'messaging'\" class=\"navbar-brand text-light\" >Messaging App</a>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MessagingComponent } from './messaging/messaging.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MessagingService} from '../_services/messaging.service';\n@Component({\n  selector: 'app-messaging',\n  templateUrl: './messaging.component.html',\n  styleUrls: ['./messaging.component.css']\n})\n\nexport class MessagingComponent implements OnInit {\n\n\n  // public newUsername;\n  // public usernames;\n  constructor(private messagingService: MessagingService) { }\n\n  ngOnInit(): void {\n    // this.messagingService.getAll().subscribe(returnNames => {\n    //   this.usernames = returnNames.docs;\n    // });\n  }\n  //\n  // saveUsername(): void {\n  //   this.messagingService.create(this.newUsername).subscribe( saveName => {\n  //     this.usernames.push(saveName);\n  //   });\n  // }\n}\n","<p>messaging works!</p>\n\n\n<body>\n<div id =\"chat\">\n    <div>\n        <form id=\"nickname\" class=\"wrap\">\n            <p>Please type in your nickname and hit enter.</p>\n            <input id=\"nick\">\n        </form>\n    </div>\n    <div id=\"messages\">\n        <div id=\"nicknames\"></div>\n        <div id=\"lines\"></div>\n    </div>\n    <form id=\"send-message\">\n        <input id=\"message\">\n        <button>Send</button>\n    </form>\n</div>\n\n<script src=\"node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"node_modules/socket.io-client/dist/socket.io.js\"></script>\n<script src=\"socketClient.js\"></script>\n</body>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MessagingComponent } from './messaging/messaging.component';\n\nconst routes: Routes = [\n  {path: 'messaging', component: MessagingComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n  constructor(private httpClient: HttpClient ) { }\n\n  getAll(): Observable<any> {\n    return this.httpClient.get<any>(`${environment.apiUrl}/messaging`);\n  }\n\n  create(newUser): Observable<any> {\n    return this.httpClient.post<any>(`${environment.apiUrl}/messaging`, {users: newUser});\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}