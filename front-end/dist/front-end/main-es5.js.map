{"version":3,"sources":["webpack:///ws (ignored)","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/messaging/messaging.component.ts","webpack:///src/app/messaging/messaging.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_services/messaging.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","apiUrl","AppComponent","title","selector","templateUrl","styleUrls","config","url","options","AppModule","forRoot","declarations","imports","providers","bootstrap","MessagingComponent","messageService","messageList","sendMessage","newMessage","User","getMessages","subscribe","message","push","routes","path","component","AppRoutingModule","exports","MessageService","socket","emit","fromEvent","providedIn","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8080'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front-end';\r\n}\r\n","<nav class=\"navbar navbar-light bg-dark\">\r\n    <a [routerLink]=\"'messaging'\" class=\"navbar-brand text-light\" >Messaging App</a>\r\n</nav>\r\n\r\n<div align = \"center\">\r\n    <h1>Welcome!</h1>\r\n    <p>This app is exclusively for cat lovers.</p>\r\n</div>\r\n\r\n\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MessagingComponent } from './messaging/messaging.component';\r\n\r\nconst config: SocketIoConfig = { url: 'http://localhost:8001', options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MessagingComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      FormsModule,\r\n      SocketIoModule.forRoot(config)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MessageService} from '../_services/messaging.service';\r\n\r\n@Component({\r\n  selector: 'app-messaging',\r\n  templateUrl: './messaging.component.html',\r\n  styleUrls: ['./messaging.component.css']\r\n})\r\n\r\nexport class MessagingComponent implements OnInit {\r\n\r\n  newMessage: string;\r\n  User: string;\r\n  messageList: string[] = [''];\r\n\r\n  constructor(private messageService: MessageService) {\r\n  }\r\n\r\n  sendMessage(): void {\r\n    this.messageService.sendMessage(this.newMessage, this.User);\r\n    this.newMessage = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.messageService.getMessages().subscribe((message: string) => {\r\n      this.messageList.push(message);\r\n    });\r\n  }\r\n\r\n}\r\n","<body>\r\n<div id =\"chat\">\r\n    <div align = \"center\">\r\n        <label for=\"userName\">Name: </label>\r\n        <input id=\"userName\" [(ngModel)]=\"User\" (keyup.enter)=\"sendMessage()\">\r\n        <br>\r\n        <label for=\"message\">Message: </label>\r\n        <input id=\"message\" [(ngModel)]=\"newMessage\" (keyup.enter)=\"sendMessage()\">\r\n        <button (click)=\"sendMessage()\">Send Message</button>\r\n    </div>\r\n\r\n    <div *ngFor=\"let message of messageList\" align = \"center\">\r\n        <span>{{message}}</span>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<script src=\"node_modules/jquery/dist/jquery.js\"></script>\r\n<script src=\"node_modules/socket.io-client/dist/socket.io.js\"></script>\r\n<script src=\"socketClient.js\"></script>\r\n</body>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MessagingComponent } from './messaging/messaging.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'messaging', component: MessagingComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MessageService {\r\n\r\n    constructor(private socket: Socket) { }\r\n\r\n    sendMessage(message: string, User: string): void {\r\n        this.socket.emit('user message', User + ': ' + message);\r\n    }\r\n\r\n    getMessages(): any {\r\n        return this.socket.fromEvent('user message');\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}